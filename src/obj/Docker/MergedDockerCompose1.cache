networks:
  aspnetcoreapp-network:
    driver: bridge
services:
  catalog.api:
    build:
      context: C:\Users\3frames-61\Desktop\eShopOnContainersReplica\src\Services\Catalog\Catalog.API
      dockerfile: Dockerfile
    depends_on:
    - sql.data
    environment:
      ASPNETCORE_URLS: http://+:80
      ConnectionString: Server=sql.data;Database=CatalogDB;User Id=SA;Password=Nikhil@123;MultipleActiveResultSets=True
    image: shop/catalog
    networks:
      aspnetcoreapp-network: {}
    ports:
    - target: 80
    - published: 5102
      target: 80
    volumes:
    - C:\Users\3frames-61\.aspnet\https:/https:ro
  identity.api:
    build:
      context: C:\Users\3frames-61\Desktop\eShopOnContainersReplica\src\Services\Identity\Identity.API
      dockerfile: Dockerfile
    depends_on:
    - sql.data
    environment:
      ASPNETCORE_URLS: http://+:80
      ConnectionString: Server=sql.data;Database=IdentityDB;User Id=SA;Password=Nikhil@123;MultipleActiveResultSets=True
    image: shop/identity
    networks:
      aspnetcoreapp-network: {}
    ports:
    - published: 5101
      target: 80
    volumes:
    - C:\Users\3frames-61\.aspnet\https:/https:ro
  mvc.client:
    build:
      context: C:\Users\3frames-61\Desktop\eShopOnContainersReplica\src\Web\Client
      dockerfile: Dockerfile
    depends_on:
    - catalog.api
    - identity.api
    environment:
      ASPNETCORE_URLS: http://+:80
      CatalogUrl: http://catalog.api
      IdentityUrl: http://192.168.224.225:5101
    image: shop/client
    networks:
      aspnetcoreapp-network: {}
    ports:
    - target: 80
    - published: 5100
      target: 80
    volumes:
    - C:\Users\3frames-61\.aspnet\https:/https:ro
  sql.data:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Nikhil@123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      aspnetcoreapp-network: {}
    ports:
    - published: 1445
      target: 1433
version: '3.4'